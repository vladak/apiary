HIFORMAT: 1A

# OpenGrok

OpenGrok RESTful API documentation. The following endpoints are accessible under `/api/v1`

Besides `/suggester` and `/search` endpoints, everything is accessible from `localhost` only.

## Configuration [/configuration]

### return XML representation of configuration [GET]

+ Response 200 (application/xml)

    ```
    <?xml version="1.0" encoding="UTF-8"?>
    <java version="1.8.0_172" class="java.beans.XMLDecoder">
     <object class="org.opengrok.indexer.configuration.Configuration" id="Configuration0">
      <void property="allowLeadingWildcard">
       <boolean>true</boolean>
      </void>
     </object>
    </java>
    ```

### sets configuration from XML representation [POST]

+ Request (application/xml)

    ```
    <?xml version="1.0" encoding="UTF-8"?>
    <java version="1.8.0_172" class="java.beans.XMLDecoder">
     <object class="org.opengrok.indexer.configuration.Configuration" id="Configuration0">
      <void property="allowLeadingWildcard">
       <boolean>true</boolean>
      </void>
     </object>
    </java>
    ```

+ Response 201 (application/json)

## Configuration field [/configuration/{field}{?reindex}]

### returns specific configuration field [GET]

+ Response 200 (application/json)

### sets specific configuration field [PUT]

+ Parameters
  + reindex (boolean) - specifies if the underlying data were also reindexed (refreshes some searchers and additional data structures)

+ Request (application/text)

        string value of the field to set

+ Response 204

## Authorization framework reload [/configuration/authorization/reload]

### reloads authorization framework [POST]

+ Request (application/text)

+ Response 204

## Messages [/messages{?tag}]

### adds message to a system [POST]

+ Request (application/json)

        {
          "tags": ["main"],
          "cssClass": "cssClass",
          "text":"test message",
          "duration":"PT10M"
        }

+ Response 204

### deletes messages with specified tag [DELETE]

+ Parameters
  + tag (string) - tag

+ Response 222

### returns all messages with specified tag [GET]

+ Parameters
  + tag (string) - tag

+ Response 222 (application/json)

        [
          {
            "acceptedTime": "2018-06-28T17:49:01.793Z",
            "message": {
              "tags": ["main"],
              "cssClass": "cssClass",
              "text": "test message",
              "duration": "PT10M"
            },
            "expirationTime": "2018-06-28T17:59:01.793Z",
            "expired":false
          }
        ]
        
## Projects [/projects]

### returns a list of projects [GET]

+ Response 200 (application/text)

### add project [POST]

+ Request (text/plain)
  + Body
  
            text/plain name of the project

+ Response 201

## Project management [/projects/{project}]

### delete project [DELETE]

+ Response 204

## Project metadata management [/projects/{project}/indexed]

### marks project as indexed [PUT]

+ Response 204

## Project metadata [/projects/{project}/property/{field}]

### sets property field for the project [PUT]

+ Request
  + Body
  
            body – string representation of the value to set

+ Response 204

### returns the field value [GET]

+ Response 200 (application/json)
        
## Project repositories [/projects/{project}/repositories]

### returns a list of repositories for the specified project [GET]

+ Response 200 (application/json)
  + Body

            ["/opengrok-master/testdata/repositories/teamware",
             "/opengrok-master/testdata/sources/rfe2575",
             "/opengrok-master/testdata/repositories/rcs_test",
             "/opengrok-master"]

## Repository type [/projects/{project}/repositories/type]

### returns types of project repositories [GET]

+ Response 200 (application/json)
  + Body
  
            ["RCS","git","SCCS"]

## Project indexed flag [/projects/indexed]

### returns a list of indexed projects [GET]

+ Response 200 (application/json)
  + Body
  
            ["sc-2","sc-1"]
            
## Repository type [/repositories/type{?repository}]

### return type of the repository [GET]

The repository path is relative to source root, starting with slash.
Repository type is separated from the repository path with a colon.

+ Response 200 (text/plain)
  + Body

            /opengrok-master:git

+ Parameters
  + repository - repository for which to return type

## Search [/search{?full,def,symbol,path,hist,type,projects,maxresults,start}]

## return search results [GET]

+ Parameters
  + full (optional, string) – full search field value to search for
  + def (optional, string) – definition field value to search for
  + symbol (optional, string) – symbol field value to search for
  + path (optional, string) – file path field value to search for
  + hist (optional, string) – history field value to search for
  + type (optional, string) – type of the files to search for
  + projects (optional, string) – projects to search in
  + maxresults (optional, string) – maximum number of documents whose hits will be returned
  + start (optional, string) – start index from which to return results

+ Response 200 (application/json)
  + Body
  
            {
              "time": 13,
              "resultCount": 35,
              "startDocument": 0,
              "endDocument": 0,
              "results": {
                "/opengrok/test/org/opensolaris/opengrok/history/hg-export-renamed.txt": [{
                  "line": "# User Vladimir <b>Kotal</b> &lt;Vladimir.<b>Kotal</b>@oracle.com&gt;",
                  "lineNumber": "19"
                },{
                  "line": "# User Vladimir <b>Kotal</b> &lt;Vladimir.<b>Kotal</b>@oracle.com&gt;",
                  "lineNumber":"29"
                }]
              }